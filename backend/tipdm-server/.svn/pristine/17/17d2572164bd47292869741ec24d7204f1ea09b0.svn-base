package com.tipdm.framework.dmserver.websocket;

import com.alibaba.fastjson.JSON;
import com.corundumstudio.socketio.AckRequest;
import com.corundumstudio.socketio.SocketIOClient;
import com.corundumstudio.socketio.listener.DataListener;
import com.google.common.collect.BiMap;
import com.tipdm.framework.common.Constants;
import com.tipdm.framework.common.token.TokenManager;
import com.tipdm.framework.common.token.model.TokenModel;
import com.tipdm.framework.common.utils.RedisUtils;
import com.tipdm.framework.common.utils.SpringUtils;
import com.tipdm.framework.common.utils.StringKit;
import com.tipdm.framework.model.dmserver.Document;
import com.tipdm.framework.model.dmserver.Project;
import com.tipdm.framework.service.dmserver.ProjectService;
import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.multipart.support.MissingServletRequestPartException;

import java.io.File;
import java.util.Calendar;
import java.util.Map;

/**
 * Created by zhoulong on 2018/1/13.
 * E-mail:zhoulong8513@gmail.com
 * 流程内容同步
 */
public class WorkFlowSyncListener implements DataListener {

    private final static Logger LOG = LoggerFactory.getLogger(WorkFlowSyncListener.class);

    private TokenManager tokenManager = SpringUtils.getBean("tokenManager", TokenManager.class);

    private ProjectService projectService = SpringUtils.getBean("projectService", ProjectService.class);

    private String docDir = RedisUtils.get(com.tipdm.framework.dmserver.utils.Constants.DOCUMENT_DIR, String.class);

    public WorkFlowSyncListener(BiMap<String, String> clients) {
    }

    @Override
    public void onData(SocketIOClient client, Object data, AckRequest ackRequest) throws Exception {

        try {
            Map<String, Object> map = JSON.parseObject((String) data, Map.class);
            String accessToken = (String) map.get("accessToken");
            Long projectId = Long.parseLong(map.get("projectId").toString());
            String content = (String) map.get("content");

            TokenModel tokenModel = tokenManager.getPermissions(accessToken);
            if (null == tokenModel) {
                return;
            }

            if (StringKit.isBlank(content)) {
                throw new MissingServletRequestPartException("Required request part 'content' is not present");
            }

            Project project = projectService.findOne(projectId);
            project.setLastOpenTime(Calendar.getInstance().getTime());
            Document doc = projectService.findDocumentByProjectId(projectId);
            File parentDir = new File(docDir + "/" + tokenModel.getUsername() + "/" + projectService.getRealPathByDocumentId(doc.getParentId()));
            File file = new File(parentDir, project.getName() + ".json");

            FileUtils.write(file, content, Constants.CHARACTER, false);

        } catch (Exception ex) {
            LOG.error(ex.getMessage());
        }
    }
}
