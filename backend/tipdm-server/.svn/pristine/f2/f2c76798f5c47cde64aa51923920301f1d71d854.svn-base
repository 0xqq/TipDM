package com.tipdm.framework.dmserver.utils;

import org.dmg.pmml.PMML;
import org.jpmml.model.MetroJAXBUtil;
import org.jpmml.rexp.Converter;
import org.jpmml.rexp.ConverterFactory;
import org.jpmml.rexp.RExp;
import org.jpmml.rexp.RExpParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.xml.bind.JAXBException;
import java.io.*;

/**
 * Created by zhoulong on 2017/3/14.
 * E-mail:zhoulong8513@gmail.com
 */
public class PMMLUtils {

    private final static Logger logger = LoggerFactory.getLogger(PMMLUtils.class);

    public static void convert(File input, File output, String converter) throws Exception {
        RExp rexp;

        try(InputStream is = new FileInputStream(input)){
            logger.info("Parsing RDS..");

            RExpParser parser = new RExpParser(is);

            long start = System.currentTimeMillis();
            rexp = parser.parse();
            long end = System.currentTimeMillis();

            logger.info("Parsed RDS in {} ms.", (end - start));
        } catch(Exception e){
            logger.error("Failed to parse RDS", e);

            throw e;
        }

        ConverterFactory converterFactory = ConverterFactory.newInstance();

        Converter<RExp> converter1;

        if(converter != null){
            logger.info("Initializing user-specified Converter {}", converter);

            Class<? extends Converter> clazz = (Class<? extends Converter>)Class.forName(converter);

            converter1 = converterFactory.newConverter(clazz, rexp);
        } else {
            logger.info("Initializing default Converter");

            converter1 = converterFactory.newConverter(rexp);
        } // End if

        {
            Class<?> clazz = converter1.getClass();

            logger.info("Initialized {}", clazz.getName());
        }

        PMML pmml;

        try {
            logger.info("Converting..");

            long start = System.currentTimeMillis();
            pmml = converter1.encodePMML();
            long end = System.currentTimeMillis();

            logger.info("Converted in {} ms.", (end - start));
        } catch(Exception e){
            logger.error("Failed to convert", e);

            throw e;
        } // End try

        OutputStream os = null;
        try{
            os = new FileOutputStream(output);
            logger.info("Marshalling PMML..");

            long start = System.currentTimeMillis();
            try {
                MetroJAXBUtil.marshalPMML(pmml, os);
            }catch (JAXBException e){
                e.printStackTrace();
            }
            long end = System.currentTimeMillis();

            logger.info("Marshalled PMML in {} ms.", (end - start));
        } catch(Exception e){
            e.printStackTrace();
            logger.error("Failed to marshal PMML", e);

            throw e;
        }finally {
            if(os != null) {
                os.close();
            }
        }
    }

    public static void main(String[] args)throws Exception{

        File input = new File("d:/rf.rds");
        File output = new File("d:/ssss.pmml");

        PMMLUtils.convert(input, output, null);
    }
}
