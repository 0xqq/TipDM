package com.tipdm.framework.repository.dmserver;

import com.tipdm.framework.controller.dmserver.entity.DataColumn;
import com.tipdm.framework.model.dmserver.UserTable;
import com.tipdm.framework.persist.BaseRepository;
import org.postgresql.util.PSQLException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

/**
 * Created by zhoulong on 2016/12/15.
 * E-mail:zhoulong8513@gmail.com
 */
public interface UserTableRepository extends BaseRepository<UserTable, Long> {

    /**
     * 根据MD5查找数据表
     * @param md5
     * @return
     */
    @Query("select u.tableName from UserTable u where u.md5 = ?1 ")
    public List<String> findDistinctUserTableByMd5(String md5);


    public Page<UserTable> findSharedTables(final Map<String, Object> params, Pageable pageable);
    /**
     *
     * @param creatorName   创建者
     * @return
     */
    public List<UserTable> findByCreatorName(String creatorName);

    /**
     * 根据表名查找数据表
     * @param tableName
     * @return
     */
    public UserTable findByTableName(String tableName);

    public UserTable findByShowNameAndCreatorId(String tableName, Long creatorId);


    /**
     * 建表
     * @param tableName
     * @param columns
     */
    public void createTable(String tableName, List<DataColumn> columns);

    /**
     * 拷贝表数据
     * @param sourceTable   源表
     * @param targetTable    目标表
     */
    public void copyData(String sourceTable, String targetTable);

    /**
     * 清除表数据
     * @param tableName
     */
    public void truncate(String tableName);
    /**
     * 拷贝CSV到数据表
     * @param dataFile
     * @param targetTable
     */
    public void copyData(File dataFile, String targetTable) throws PSQLException;

    /**
     * 删除表
     * @param tableName
     */
    public void dropTable(String tableName);

    /**
     * 删除表
     * @param userTable
     */
    public void dropTable(UserTable userTable);

    public List<Map<String, Object>> previewData(String tableName);

    public Page<Map<String, Object>> previewData(String sql, Pageable pageable);
    /**
     * 根据数据表名前缀过滤
     * @param prefix
     * @param limit
     * @return
     */
    public List<Map<String, Object>> findUserTableByPrefix(Long creatorId, String prefix, List<Integer> excludeType, Integer limit);


    /**
     * 获取表的数据结构
     * @param tableName
     * @return
     */
    public List<Map<String, Object>> getTableStructure(String tableName);

    /**
     * 拷贝表结构
     * @param sourceTable
     * @param targetTable
     */
    public void copyTableStructure(String sourceTable, String targetTable, String...column);

    public void copyData(String sourceTable, String targetTable, String...column);

    public void copyData(String sourceTable, String targetTable, boolean truncate, String...column);

    /**
     * 更新表同步状态
     * @param status
     * @param id
     */
    @Modifying
    @Query(value = "Update dm_user_table SET status =?1 WHERE id=?2",nativeQuery = true)
    public void update( Integer status,Long id);


    public void batchExecuteSQL(String... sqls) throws SQLException;

    public List<Map<String, Object>> findBySQL(String sql) throws SQLException;
}
