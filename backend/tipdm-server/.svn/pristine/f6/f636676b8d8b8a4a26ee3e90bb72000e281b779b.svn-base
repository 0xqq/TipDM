package com.tipdm.framework.dmserver.utils;

import com.tipdm.framework.common.Constants;
import com.tipdm.framework.common.utils.StringKit;
import org.apache.commons.codec.digest.DigestUtils;
import org.rosuda.REngine.REXP;
import org.rosuda.REngine.REXPString;
import org.rosuda.REngine.RList;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Created by zhoulong on 2016/12/29.
 * E-mail:zhoulong8513@gmail.com
 */
public class CommonUtils {

    public static String generateTableName(String username, String oriTableName){
        return generateTableName(username, oriTableName, true);
    }

    public static String generateTableName(String username, String oriTableName, boolean appendPrefix){
        String tableName = DigestUtils.sha1Hex(Constants.TABLE_PREFIX + "_" + username) + "_" + oriTableName;
        if(appendPrefix) {
            tableName =  "t_" + tableName;
        }
        if(tableName.length() > 63){
            // 生成一个MD5加密计算摘要
            MessageDigest md = null;
            try {
                md = MessageDigest.getInstance("MD5");
            } catch (NoSuchAlgorithmException e) {

            }
            md.update((Constants.TABLE_PREFIX + username).getBytes());
            tableName = "t_" + new BigInteger(1, md.digest()).toString(16) + "_md_" + oriTableName;
        }
        return tableName;
    }

    public static String removeTableNamePrefix(String tableName){
        if(StringKit.isNotBlank(tableName)){
            if(tableName.startsWith("t_")){
                return StringKit.substringAfter(tableName, "t_");
            }
        }
        return tableName;
    }

    public static String recoverTableName(String creator, String tableName){
        if(StringKit.isNotBlank(tableName)){
            if(StringKit.contains(tableName, "_md_")){
                return StringKit.substringAfter(tableName, "_md_");
            }
            String prefix = DigestUtils.sha1Hex(Constants.TABLE_PREFIX + "_" + creator) + "_";
            if(tableName.startsWith("t_")){
                return StringKit.substringAfter(tableName, "t_" + prefix);
            } else {
                return StringKit.substringAfter(tableName, prefix);
            }
        }
        return tableName;
    }

    public static RList mapToRList(Map<String, String> map){

        List<REXP> value = new ArrayList();

        for(Map.Entry<String, String> entry : map.entrySet()){
            value.add(new REXPString(entry.getValue()));
        }

        RList rList = new RList(value.toArray(new REXP[]{}), map.keySet().toArray(new String[]{}));
        return rList;
    }
}
