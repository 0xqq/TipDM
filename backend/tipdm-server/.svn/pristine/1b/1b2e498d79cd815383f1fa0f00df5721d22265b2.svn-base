package com.tipdm.framework.dmserver.core.algo.unparallel;

import com.tipdm.framework.common.utils.SpringUtils;
import com.tipdm.framework.dmserver.core.algo.unparallel.executor.AlgorithmExecutor;
import com.tipdm.framework.dmserver.core.algo.unparallel.executor.PyExecutor;
import com.tipdm.framework.dmserver.exception.AlgorithmException;
import com.tipdm.framework.dmserver.exception.ConnectionException;
import com.tipdm.framework.dmserver.pyserve.PySession;
import com.tipdm.framework.dmserver.pyserve.PySessionPool;

/**
 * @author zhoulong E-mail:zhoulong8513@gmail.com
 * @version 创建时间：2016年11月7日 上午10:29:42
 * 单机算法 通用类
 */
@SuppressWarnings("all")
public class CommonAlgorithm extends AbstractAlgorithm{

//    private RsessionPool rsessionPool = SpringUtils.getBean("rsessionPool", RsessionPool.class);

    private PySessionPool pySessionPool = SpringUtils.getBean("pysessionPool", PySessionPool.class);

    @Override
    protected void execute() throws ConnectionException, AlgorithmException {

        AlgorithmExecutor executor = null;
        //
        /*if(component.getExtra() == null || ComponentExtra.ENGINE.R == component.getExtra().getEngine()){
            Rsession session = rsessionPool.getSession(component.getClientId().toString());
            executor = new RExecutor(session, component);
        } else if(ComponentExtra.ENGINE.PYTHON == component.getExtra().getEngine()) {*/
            PySession session = pySessionPool.getSession();
            executor = new PyExecutor(session, component);
//        }
        executor.run();
    }
}
