package com.tipdm.framework.dmserver.core.algo.unparallel.io;

import com.tipdm.framework.common.utils.SpringUtils;
import com.tipdm.framework.common.utils.StringKit;
import com.tipdm.framework.dmserver.core.algo.unparallel.AbstractAlgorithm;
import com.tipdm.framework.dmserver.exception.AlgorithmException;
import com.tipdm.framework.dmserver.pyserve.PySession;
import com.tipdm.framework.dmserver.pyserve.PySessionPool;
import com.tipdm.framework.model.dmserver.UserTable;

import java.io.File;

/**
 * Created by TipDM on 2017/2/13.
 * E-mail:devp@tipdm.com
 * 非结构化数据源
 */
public class UnstructuredInput extends AbstractAlgorithm {

    private PySessionPool pySessionPool = SpringUtils.getBean("pysessionPool", PySessionPool.class);

    @Override
    protected void execute() throws AlgorithmException {
        String table = this.getParams().get("table");
        if(StringKit.isBlank(table)){
            throw new AlgorithmException("输入源组件的table参数不能为空");
        }
        Long tableId = Long.parseLong(table);

        UserTable userTable = tableService.findOne(tableId);
        if(null == userTable){
            throw new AlgorithmException("数据源不存在或已被删除！");
        }

        if(userTable.getTableType() != UserTable.TableType.UNSTRUCTURED){
            throw new AlgorithmException("数据源类型不匹配，请重新选择！");
        }

        File localFile = new File(userTable.getTableName());
        String remoteFile = "/tmp/" + localFile.getName();
        PySession session = pySessionPool.getSession();
        try {
            session.sendFile(localFile, remoteFile);
        } catch (Exception e) {
            throw new AlgorithmException("数据文件传输失败：" + e.getMessage());
        }
    }
}
