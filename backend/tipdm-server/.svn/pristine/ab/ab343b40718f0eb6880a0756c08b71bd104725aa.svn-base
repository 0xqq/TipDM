###获取连接
tipdm.getConnection <- function(host="127.0.0.1", port=5432, dbname, user, password){
    require(RPostgreSQL)
    driver <- dbDriver("PostgreSQL")
    conn <- dbConnect(driver, user=user, password=password, host=host, port=port, dbname=dbname)
    return(conn)
}

###连接到数据库并读取数据
tipdm.query <- function(conn, sql){
    statement <- dbGetQuery(conn, statement = sql)
    return(statement)
}

###关闭连接
tipdm.closeConnection <- function(conn){
    dbDisconnect(conn)
}

###拷贝表结构
tipdm.copyTableStructure <- function(conn, source, target, columns){

    exists <- dbExistsTable(conn, target);
    if(exists){
        dropSQL <- paste("drop table", target)
        dbSendQuery(conn, dropSQL);
    };
    sql <- paste("create table ", target, " as (select ", columns, " from ", source, " limit 0) ");
    dbSendQuery(conn, sql);
}

###拷贝表
tipdm.copyTable <- function(conn, source, target, columns){

    exists <- dbExistsTable(conn, target);
    if(exists){
        dropSQL <- paste("drop table", target)
        dbSendQuery(conn, dropSQL);
    };
    sql <- paste("create table ", target, " as (select ", columns, " from ", source, ")");
    dbSendQuery(conn, sql);
}

###写入到数据表
###conn 数据库连接
###table 目标表
###dataFrame 要写入的数据，数据类型：data.frame
###overwrite 是否覆盖
tipdm.writeToTable <- function(conn, table, dataFrame, overwrite = T){
    dbWriteTable(conn, name = table, overwrite = overwrite, value = dataFrame, row.names = FALSE)
}

###删除表
tipdm.dropTable <- function(conn, table){
    if(dbExistsTable(conn, table)) {
        dbRemoveTable(conn, table);
    }
}
###新建表
###table 表名
###columns 列表 eg: list(col_1="integer",col_2="float",col_3="character varying(100)")
### key为字段名，对应的值为数据类型
tipdm.createTable <- function(conn, table, columns){
    exists <- dbExistsTable(conn, table);
    if(exists){
        dropSQL <- paste("drop table", table)
        dbSendQuery(conn, dropSQL);
    };

    sql <- paste("create table ", table, "(")

    for(col in names(columns)){
        sql <- paste(sql, col, columns[col], ",")
    }
    sql <- substring(sql, 1, nchar(sql)-1)
    sql <- paste(sql, ")")
    dbSendQuery(conn, sql)
}
