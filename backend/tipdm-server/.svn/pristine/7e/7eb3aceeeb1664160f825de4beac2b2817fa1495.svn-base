package com.tipdm.framework.dmserver.config;
import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;
import org.apache.commons.io.monitor.FileAlterationMonitor;
import org.apache.commons.io.monitor.FileAlterationObserver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import java.io.File;
import java.util.concurrent.TimeUnit;
//@WebListener
public class FileListener extends FileAlterationListenerAdaptor implements ServletContextListener {

    private final static Logger logger = LoggerFactory.getLogger(FileListener.class);

    @Override
    public void contextInitialized(ServletContextEvent servletContextEvent) {
        // 监控目录
        String rootDir = servletContextEvent.getServletContext().getRealPath("/WEB-INF/classes/sysconfig/");
        logger.info("启动文件目录监控开始:" + rootDir);
        //间隔 5 秒
        long interval = TimeUnit.SECONDS.toMillis(5);

        FileAlterationObserver observer = new FileAlterationObserver(rootDir);

        observer.addListener(new FileListener()); //设置文件变化监听器
        //创建文件变化监听器
        FileAlterationMonitor monitor = new FileAlterationMonitor(interval, observer);
        // 开始监控
        try {
            monitor.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
        logger.info("--启动文件目录监控成功--" + interval);
    }

    @Override
    public void contextDestroyed(ServletContextEvent servletContextEvent) {

    }



    /**
     * 文件创建执行
     */
    @Override
    public void onFileCreate(File file) {
        logger.info("[新建]:" + file.getAbsolutePath());
    }

    /**
     * 文件创建修改
     */
    @Override
    public void onFileChange(File file) {
        try {
            SpringBean.registerBean(file);//注册spring bean
        } catch (Exception e) {
            e.printStackTrace();
        }
        logger.info("[修改]:" + file.getAbsolutePath());
    }

    /**
     * 文件删除
     */
    @Override
    public void onFileDelete(File file) {
        logger.info("[删除]:" + file.getAbsolutePath());
    }

    /**
     * 目录创建
     */
    @Override
    public void onDirectoryCreate(File directory) {
        logger.info("[新建]:" + directory.getAbsolutePath());
    }

    /**
     * 目录修改
     */
    @Override
    public void onDirectoryChange(File directory) {
        logger.info("[修改]:" + directory.getAbsolutePath());
    }

    /**
     * 目录删除
     */
    @Override
    public void onDirectoryDelete(File directory) {
        logger.info("[删除]:" + directory.getAbsolutePath());
    }

    @Override
    public void onStart(FileAlterationObserver observer) {
        super.onStart(observer);
    }

    @Override
    public void onStop(FileAlterationObserver observer) {
        super.onStop(observer);
    }

}
