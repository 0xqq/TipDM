package com.tipdm.license;

import de.schlichtherle.license.LicenseContentException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.slf4j.helpers.MessageFormatter;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;

/**
 * Created by zhoulong on 2017/6/24.
 * E-mail:zhoulong8513@gmail.com
 */
public class LicenseVerifyFilter implements Filter{

    private final Logger logger = LoggerFactory.getLogger(LicenseVerifyFilter.class);

    private String machineCode;

    //开始验证License的有效性
    private LicenseVerifier licenseVerifier;

    private final static String[] unFilterPattern = new String[]{"/unAuth.jsp", "/license/install"};
    @Override
    public void init(FilterConfig filterConfig) throws ServletException {

        licenseVerifier = new LicenseVerifier();
        try {
            machineCode = License.generateMachineCode();
        } catch (GenerateMachineCodeException e) {
            String errMsg = MessageFormatter.format("无法获取机器码，错误信息： {}",  e.getMessage()).getMessage();
            throw new ServletException(errMsg);
        }
    }

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {

        HttpServletRequest request = (HttpServletRequest)servletRequest;
        String requestURL = request.getServletPath();

        if("/license/install".equals(requestURL)){
            filterChain.doFilter(servletRequest, servletResponse);
            return;
        }
        //开始验证License的有效性
        try {
            boolean valid = licenseVerifier.verify();
            if(!valid){
                request.setAttribute("message", "License验证不通过，无效或过期的License");
                request.setAttribute("machineCode", machineCode);
                request.getRequestDispatcher("/unAuth.jsp").forward(servletRequest, servletResponse);
            }
        } catch (LicenseContentException e) {
//            logger.error("License验证失败，{}", e.toString());
            request.setAttribute("message", "License验证失败");
            request.setAttribute("machineCode", machineCode);
            request.getRequestDispatcher("/unAuth.jsp").forward(servletRequest, servletResponse);
        }

        filterChain.doFilter(servletRequest, servletResponse);
    }

    @Override
    public void destroy() {

    }
}
