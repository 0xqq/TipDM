package com.tipdm.framework.model.dmserver;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.tipdm.framework.model.IdEntity;
import com.tipdm.framework.persist.datatype.TextType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.annotations.TypeDefs;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import java.util.Date;

/**
 * Created by TipDM on 2017/10/11.
 * E-mail:devp@tipdm.com
 * 数据同步策略
 */
@ApiModel(value = "数据源同步策略")
@Entity
@Table(name = "dm_user_table_sync_strategy", uniqueConstraints = {@UniqueConstraint(columnNames = "table_id")})
@TypeDefs( { @TypeDef( name= "text", typeClass = TextType.class)})
public class DataSyncStrategy extends IdEntity<Long>{

    private static final long serialVersionUID = 7871121740810165035L;

    @Column(name = "table_id", nullable = false)
    private Long tableId;

    @ApiModelProperty(required = true, notes = "同步方式")
    @Column(name = "sync_mode", nullable = false)
    private Mode mode = Mode.FULL;//同步方式

    @ApiModelProperty(notes = "Cron表达式，如果不为空且格式正确则添加计划任务定时执行")
    @Column
    private String cron;//cron表达式

    @ApiModelProperty(notes = "id列的名称, 不支持联合主键")
    @Column(name = "primary_key")
    private String primaryKey;//id列的名称

    @ApiModelProperty(notes = "增量同步时查询新增的数据")
    @Type(type = "text")
    @Column(name = "insert_sql")
    private String insert;//增量添加语句

    @ApiModelProperty(notes = "查询源表中的被删除的记录")
    @Type(type = "text")
    @Column(name = "delete_sql")
    private String delete;//增量删除语句

    @ApiModelProperty(notes = "查询源表中发生修改的记录")
    @Type(type = "text")
    @Column(name = "update_sql")
    private String update;//增量修改语句

    @JsonIgnore
    @Column(name = "last_sync_time")
    private Date lastSyncTime = new Date(0);

    @ApiModelProperty(notes="内置时间参数的格式", allowableValues = "yyyy-MM-dd HH:mm:ss, yyyy-MM-dd, dd-MMM-yyyy, M/dd/yyyy, dd.M.yyyy, M/dd/yyyy hh:mm:ss a, dd.M.yyyy hh:mm:ss a, dd.MMM.yyyy")
    @Column(name = "date_formatter")
    private String dateFormatter = "yyyy-MM-dd HH:mm:ss";

    public Long getTableId() {
        return tableId;
    }

    public void setTableId(Long tableId) {
        this.tableId = tableId;
    }

    public Mode getMode() {
        return mode;
    }

    public void setMode(Mode mode) {
        this.mode = mode;
    }

    public String getCron() {
        return cron;
    }

    public void setCron(String cron) {
        this.cron = cron;
    }

    public String getInsert() {
        return insert;
    }

    public void setInsert(String insert) {
        this.insert = insert;
    }

    public String getDelete() {
        return delete;
    }

    public void setDelete(String delete) {
        this.delete = delete;
    }

    public String getUpdate() {
        return update;
    }

    public void setUpdate(String update) {
        this.update = update;
    }

    public Date getLastSyncTime() {
        return lastSyncTime;
    }

    public void setLastSyncTime(Date lastSyncTime) {
        this.lastSyncTime = lastSyncTime;
    }

    public String getPrimaryKey() {
        return primaryKey;
    }

    public void setPrimaryKey(String primaryKey) {
        this.primaryKey = primaryKey;
    }

    public String getDateFormatter() {
        return dateFormatter;
    }

    public void setDateFormatter(String dateFormatter) {
        this.dateFormatter = dateFormatter;
    }

    public enum Mode{
        FULL,//全量
        INCREMENT//首次全量，此后增量更新
    }

}

